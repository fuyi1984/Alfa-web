<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alfa.web.dao.SysAccountMapper">

    <!--<resultMap id="BaseResultMap" type="com.alfa.web.pojo.SysAccount" >

        <id column="Id" property="Id" jdbcType="BIGINT" />

        <result column="Account_name" property="Account_name" jdbcType="VARCHAR" />

        <result column="Account_type" property="Account_type" jdbcType="VARCHAR" />

        <result column="UsableCredit" property="UsableCredit" jdbcType="BIGINT" />

        <result column="accountBalance" property="accountBalance" jdbcType="VARCHAR" />

        <result column="accountdeposit" property="accountdeposit" jdbcType="VARCHAR" />

        <result column="status" property="status" jdbcType="VARCHAR" />

        <result column="statusName" property="statusName" jdbcType="VARCHAR" />

        <result column="description" property="description" jdbcType="VARCHAR" />

        <result column="userId" property="userId" jdbcType="BIGINT" />

        <result column="createdBy" property="createdBy" jdbcType="VARCHAR" />
        <result column="createdDt" property="createdDt" jdbcType="TIMESTAMP" />
        <result column="updatedBy" property="updatedBy" jdbcType="VARCHAR" />
        <result column="updatedDt" property="updatedDt" jdbcType="TIMESTAMP" />
        <result column="version" property="version" jdbcType="BIGINT" />

    </resultMap>

    <sql id="Example_Where_Clause" >

        <trim prefix="where" prefixOverrides="and|or" >

            <if test="condition.Id != null" >
                and Id = #{condition.Id}
            </if>
            <if test="condition.Account_name != null" >
                and Account_name = #{condition.Account_name}
            </if>
            <if test="condition.Account_type != null" >
                and Account_type = #{condition.Account_type}
            </if>
            <if test="condition.accountNameLike != null">
                and Account_name like concat('%', #{condition.accountNameLike}, '%')
            </if>
            <if test="condition.Account_typename != null" >
                and Account_typename = #{condition.Account_typename}
            </if>
            <if test="condition.UsableCredit != null" >
                and UsableCredit = #{condition.UsableCredit}
            </if>
            <if test="condition.accountBalance != null" >
                and accountBalance = #{condition.accountBalance}
            </if>
            <if test="condition.accountdeposit != null" >
                and accountdeposit = #{condition.accountdeposit}
            </if>
            <if test="condition.status != null" >
                and status = #{condition.status}
            </if>
            <if test="condition.statusName != null" >
                and statusName = #{condition.statusName}
            </if>
            <if test="condition.description != null" >
                and description = #{condition.description}
            </if>
            <if test="condition.userId != null" >
                and userId = #{condition.userId}
            </if>

            <if test="condition.createdBy != null" >
                and createdBy = #{condition.createdBy}
            </if>
            <if test="condition.createdDt != null" >
                and createdDt = #{condition.createdDt}
            </if>
            <if test="condition.updatedBy != null" >
                and updatedBy = #{condition.updatedBy}
            </if>
            <if test="condition.updatedDt != null" >
                and updatedDt = #{condition.updatedDt}
            </if>
            <if test="condition.version != null" >
                and version = #{condition.version}
            </if>
        </trim>
    </sql>

    <sql id="Base_Column_List" >
       AC.Id,AC.Account_name,AC.Account_type,AC.Account_typename,AC.UsableCredit,AC.accountBalance,AC.accountdeposit
       ,AC.status,AC.statusName,AC.description,AC.userId, A.createdBy,A.createdDt,A.updatedBy,A.updatedDt,A.version
    </sql>

    <select id="selectByParams" resultMap="BaseResultMap" parameterType="com.alfa.web.util.pojo.Criteria" >
        SELECT
        <if test="distinct" >
            DISTINCT
        </if>
        <include refid="Base_Column_List" />
        , S1.CODE_DISPLAY ACCOUNT_TYPE_NAME, S2.CODE_DISPLAY ACCOUNT_IND_NAME,S3.CODE_DISPLAY STATUS_NAME, L.LEVEL_NAME ACCOUNT_LEVEL_NAME
        FROM SysAccount AC

        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        <include refid="common.Mysql_Pagination_Limit" />
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        from SysAccount AC
        where AC.Id = #{Id}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from SysAccount
        where Id = #{Id}
    </delete>

    <delete id="deleteByParams" parameterType="com.alfa.web.util.pojo.Criteria" >
        delete from SysAccount
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.alfa.web.pojo.SysAccount" >
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into SysAccount (Account_name, Account_type, Account_typename, UsableCredit, accountBalance,
        ,accountdeposit,status,statusName,description,,userId,
        createdBy, createdDt, updatedBy, updatedDt, version)
        values (Account_name, Account_type, Account_typename, UsableCredit, accountBalance,
        ,accountdeposit,status,statusName,description,,userId,
        createdBy, createdDt, updatedBy, updatedDt, version)
    </insert>

    <insert id="insertSelective" parameterType="com.alfa.web.pojo.SysAccount" >
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into SysAccount
        <trim prefix="(" suffix=")" suffixOverrides="," >

            <if test="Account_name != null" >
                Account_name,
            </if>
            <if test="Account_type != null" >
                Account_type,
            </if>
            <if test="Account_typename != null" >
                Account_typename,
            </if>
            <if test="UsableCredit != null" >
                UsableCredit,
            </if>
            <if test="accountBalance != null" >
                accountBalance,
            </if>
            <if test="accountdeposit != null" >
                accountdeposit,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="statusName != null" >
                statusName,
            </if>
            <if test="description != null" >
                description,
            </if>
            <if test="userId != null" >
                userId,
            </if>

            <if test="createdBy != null" >
                createdBy,
            </if>
            <if test="createdDt != null" >
                createdDt,
            </if>
            <if test="updatedBy != null" >
                updatedBy,
            </if>
            <if test="updatedDt != null" >
                updatedDt,
            </if>
            <if test="version != null" >
                version,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >

            <if test="Account_name != null" >
                #{Account_name},
            </if>
            <if test="Account_type != null" >
                #{Account_type},
            </if>
            <if test="Account_typename != null" >
                #{Account_typename},
            </if>
            <if test="UsableCredit != null" >
                #{UsableCredit},
            </if>
            <if test="accountBalance != null" >
                #{accountBalance},
            </if>
            <if test="accountdeposit != null" >
                #{accountdeposit},
            </if>
            <if test="status != null" >
                #{status},
            </if>
            <if test="statusName != null" >
                #{statusName},
            </if>
            <if test="description != null" >
                #{description},
            </if>
            <if test="userId != null" >
                #{userId},
            </if>

            <if test="createdBy != null" >
                #{createdBy},
            </if>
            <if test="createdDt != null" >
                #{createdDt},
            </if>
            <if test="updatedBy != null" >
                #{updatedBy},
            </if>
            <if test="updatedDt != null" >
                #{updatedDt},
            </if>
            <if test="version != null" >
                #{version},
            </if>

        </trim>
    </insert>

    <select id="countByParams" parameterType="com.alfa.web.util.pojo.Criteria" resultType="java.lang.Integer" >
        select count(*) from SysAccount
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByParamsSelective" parameterType="map" >
        update SysAccount
        <set >
            <if test="record.Account_name != null" >
                Account_name=#{record.Account_name},
            </if>
            <if test="record.Account_type != null" >
                Account_type=#{record.Account_type},
            </if>
            <if test="record.Account_typename != null" >
                Account_typename=#{record.Account_typename},
            </if>
            <if test="record.UsableCredit != null" >
                UsableCredit=#{record.UsableCredit},
            </if>
            <if test="record.accountBalance != null" >
                accountBalance=#{record.accountBalance},
            </if>
            <if test="record.accountdeposit != null" >
                accountdeposit=#{record.accountdeposit},
            </if>
            <if test="record.status != null" >
                status=#{record.status},
            </if>
            <if test="record.statusName != null" >
                statusName=#{record.statusName},
            </if>
            <if test="record.description != null" >
                description=#{record.description},
            </if>
            <if test="record.userId != null" >
                userId=#{record.userId},
            </if>

            <if test="record.createdBy != null" >
                createdBy=#{record.createdBy},
            </if>
            <if test="record.createdDt != null" >
                createdDt=#{record.createdDt},
            </if>
            <if test="record.updatedBy != null" >
                updatedBy=#{record.updatedBy},
            </if>
            <if test="record.updatedDt != null" >
                updatedDt=#{record.updatedDt},
            </if>
            <if test="record.version != null" >
                version=#{record.version},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByParams" parameterType="map" >
        update SysAccount
        set
            Account_name=#{record.Account_name},
            Account_type=#{record.Account_type},
            Account_typename=#{record.Account_typename},
            UsableCredit=#{record.UsableCredit},
            accountBalance=#{record.accountBalance},
            accountdeposit=#{record.accountdeposit},
            status=#{record.status},
            statusName=#{record.statusName},
            description=#{record.description},
            userId=#{record.userId},
            createdBy=#{record.createdBy},
            createdDt=#{record.createdDt},
            updatedBy=#{record.updatedBy},
            updatedDt=#{record.updatedDt},
            version=#{record.version},
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.alfa.web.pojo.SysAccount" >
        update SysAccount
        <set >
            <if test="Account_name != null" >
                Account_name=#{Account_name},
            </if>
            <if test="Account_type != null" >
                Account_type=#{Account_type},
            </if>
            <if test="Account_typename != null" >
                Account_typename=#{Account_typename},
            </if>
            <if test="UsableCredit != null" >
                UsableCredit=#{UsableCredit},
            </if>
            <if test="accountBalance != null" >
                accountBalance=#{accountBalance},
            </if>
            <if test="accountdeposit != null" >
                accountdeposit=#{accountdeposit},
            </if>
            <if test="status != null" >
                status=#{status},
            </if>
            <if test="statusName != null" >
                statusName=#{statusName},
            </if>
            <if test="description != null" >
                description=#{description},
            </if>
            <if test="userId != null" >
                userId=#{userId},
            </if>

            <if test="createdBy != null" >
                createdBy=#{createdBy},
            </if>
            <if test="createdDt != null" >
                createdDt=#{createdDt},
            </if>
            <if test="updatedBy != null" >
                updatedBy=#{updatedBy},
            </if>
            <if test="updatedDt != null" >
                updatedDt=#{updatedDt},
            </if>
            <if test="version != null" >
                version=#{version},
            </if>
        </set>
        where Id = #{Id}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.alfa.web.pojo.SysAccount" >
        update SysAccount
        set
            Account_name=#{Account_name},
            Account_type=#{Account_type},
            Account_typename=#{Account_typename},
            UsableCredit=#{UsableCredit},
            accountBalance=#{accountBalance},
            accountdeposit=#{accountdeposit},
            status=#{status},
            statusName=#{statusName},
            description=#{description},
            userId=#{userId},
            createdBy=#{createdBy},
            createdDt=#{createdDt},
            updatedBy=#{updatedBy},
            updatedDt=#{updatedDt},
            version=#{version},
        where Id = #{Id}
    </update>


    <update id="batchUpdateBalanceOverLimit" parameterType="com.alfa.web.pojo.SysAccount">
        update SysAccount
        set  OVERDRAFT_LIMIT = OVERDRAFT_LIMIT+(#{increaseOverdraftLimit}),
        ACCOUNT_BALANCE = ACCOUNT_BALANCE+(#{increaseBalance})
        where Id in
        <foreach item="item" index="index" collection="accountSids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
-->
</mapper>