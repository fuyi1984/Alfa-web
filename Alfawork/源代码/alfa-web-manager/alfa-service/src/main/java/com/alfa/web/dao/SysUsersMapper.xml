<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alfa.web.dao.SysUsersMapper">

    <resultMap id="BaseResultMap" type="com.alfa.web.pojo.SysUsers">
        <id column="Id" property="Id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="sexname" property="sexname" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="statusname" property="statusname" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="typesname" property="typesname" jdbcType="VARCHAR"/>
        <result column="types" property="types" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="token" property="token" jdbcType="VARCHAR"/>
        <result column="mobiletoken" property="mobiletoken" jdbcType="VARCHAR"/>
        <result column="errorCount" property="errorCount" jdbcType="INT"/>
        <result column="errorCountformobile" property="errorCountformobile" jdbcType="INT"/>
        <result column="LoginIp" property="LoginIp" jdbcType="VARCHAR"/>
        <result column="createdBy" property="createdBy" jdbcType="VARCHAR"/>
        <result column="createdDt" property="createdDt" jdbcType="TIMESTAMP"/>
        <result column="updatedBy" property="updatedBy" jdbcType="VARCHAR"/>
        <result column="updatedDt" property="updatedDt" jdbcType="TIMESTAMP"/>
        <result column="version" property="version" jdbcType="BIGINT"/>

        <collection property="SysRole" ofType="com.alfa.web.pojo.SysRole">
            <id column="Id" property="Id" jdbcType="BIGINT" />
            <result column="role_name" property="role_name" jdbcType="VARCHAR" />
            <result column="types" property="types" jdbcType="VARCHAR" />
            <result column="typesname" property="typesname" jdbcType="VARCHAR" />
            <result column="status" property="status" jdbcType="VARCHAR"/>
            <result column="statusname" property="statusname" jdbcType="VARCHAR"/>
            <result column="roleDesc" property="roleDesc" jdbcType="VARCHAR"/>
            <result column="createdBy" property="createdBy" jdbcType="VARCHAR" />
            <result column="createdDt" property="createdDt" jdbcType="TIMESTAMP" />
            <result column="updatedBy" property="updatedBy" jdbcType="VARCHAR" />
            <result column="updatedDt" property="updatedDt" jdbcType="TIMESTAMP" />
            <result column="version" property="version" jdbcType="BIGINT" />
        </collection>

    </resultMap>

    <sql id="Example_Where_Clause">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="condition.Id != null">
                and A.Id = #{condition.Id}
            </if>
            <if test="condition.username != null">
                and A.username = #{condition.username}
            </if>
            <if test="condition.password != null">
                and A.password = #{condition.password}
            </if>
            <if test="condition.phone != null">
                and A.phone = #{condition.phone}
            </if>
            <if test="condition.sexname != null">
                and A.sexname = #{condition.sexname}
            </if>
            <if test="condition.sex != null">
                and A.sex = #{condition.sex}
            </if>
            <if test="condition.statusname != null">
                and A.statusname = #{condition.statusname}
            </if>
            <if test="condition.status != null">
                and A.status = #{condition.status}
            </if>
            <if test="condition.typesname != null">
                and A.typesname = #{condition.typesname}
            </if>
            <if test="condition.types != null">
                and A.types = #{condition.types}
            </if>
            <if test="condition.address != null">
                and A.address = #{condition.address}
            </if>
            <if test="condition.remarks != null">
                and A.remarks = #{condition.remarks}
            </if>
            <if test="condition.token != null">
                and A.token = #{condition.token}
            </if>
            <if test="condition.mobiletoken != null">
                and A.mobiletoken = #{condition.mobiletoken}
            </if>
            <if test="condition.errorCount != null">
                and A.errorCount = #{condition.errorCount}
            </if>
            <if test="condition.errorCountformobile != null">
                and A.errorCountformobile = #{condition.errorCountformobile}
            </if>
            <if test="condition.LoginIp != null">
                and A.LoginIp = #{condition.LoginIp}
            </if>
            <if test="condition.createdBy != null">
                and A.createdBy = #{condition.createdBy}
            </if>
            <if test="condition.createdDt != null">
                and A.createdDt = #{condition.createdDt}
            </if>
            <if test="condition.updatedBy != null">
                and A.updatedBy = #{condition.updatedBy}
            </if>
            <if test="condition.updatedDt != null">
                and A.updatedDt = #{condition.updatedDt}
            </if>
            <if test="condition.version != null">
                and A.version = #{condition.version}
            </if>
            <if test="condition.createDtFrom != null" >
                and A.createdDt <![CDATA[ >=str_to_date(#{condition.createDtFrom},'%Y-%m-%d %H:%i:%S')]]>
            </if>
            <if test="condition.createDtTo != null" >
                and A.createdDt <![CDATA[ <=str_to_date(#{condition.createDtTo} ,'%Y-%m-%d %H:%i:%S')]]>
            </if>
        </trim>
    </sql>

    <sql id="Base_Column_List">
        A.Id, A.username, A.password, A.phone, A.sexname, A.sex,
        A.statusname,A.status,A.typesname,A.types,A.address,A.remarks,
        A.token,A.mobiletoken,A.errorCount,A.errorCountformobile,A.LoginIp,
        A.createdBy,A.createdDt,A.updatedBy,A.updatedDt,A.version
    </sql>
    
    <insert id="insert" parameterType="com.alfa.web.pojo.SysUsers">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sysusers (username, password, phone, sexname,sex,statusname,status,typesname,types,
        address,remarks,token,mobiletoken,errorCount,errorCountformobile,LoginIp,
        createdBy, createdDt, updatedBy, updatedDt, version)
        values (#{username}, #{password}, #{phone}, #{sexname},#{sex},#{statusname},#{status},#{typesname},#{types},
        #{address},#{remarks},#{token},#{mobiletoken},#{errorCount},#{errorCountformobile},#{LoginIp},
        #{createdBy}, #{createdDt}, #{updatedBy}, #{updatedDt}, #{version})
    </insert>
    <insert id="insertSelective" parameterType="com.alfa.web.pojo.SysUsers">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sysusers
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test=" phone != null">
                phone,
            </if>
            <if test="sexname != null">
                sexname,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="statusname != null">
                statusname,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="typesname != null">
                typesname,
            </if>
            <if test="types != null">
                types,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="remark != null">
                remarks,
            </if>
            <if test="token != null">
                token,
            </if>
            <if test="mobiletoken != null">
                mobiletoken,
            </if>
            <if test="errorCount != null">
                errorCount,
            </if>
            <if test="errorCountformobile != null">
                errorCountformobile,
            </if>
            <if test="LoginIp != null">
                LoginIp,
            </if>
            <if test="createdBy != null">
                createdBy,
            </if>
            <if test="createdDt != null">
                createdDt,
            </if>
            <if test="updatedBy != null">
                updatedBy,
            </if>
            <if test="updatedDt != null">
                updatedDt,
            </if>
            <if test="version != null">
                version,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username},
            </if>
            <if test="password != null">
                #{password},
            </if>
            <if test=" phone != null">
                #{phone},
            </if>
            <if test="sexname != null">
                #{sexname},
            </if>
            <if test="sex != null">
                #{sex},
            </if>
            <if test="statusname != null">
                #{statusname},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="typesname != null">
                #{typesname},
            </if>
            <if test="types != null">
                #{types},
            </if>
            <if test="address != null">
                #{address},
            </if>
            <if test="remark != null">
                #{remarks},
            </if>
            <if test="token != null">
                #{token},
            </if>
            <if test="mobiletoken != null">
                #{mobiletoken},
            </if>
            <if test="errorCount != null">
                #{errorCount},
            </if>
            <if test="errorCountformobile != null">
                #{errorCountformobile},
            </if>
            <if test="LoginIp != null">
                #{LoginIp},
            </if>
            <if test="createdBy != null">
                #{createdBy},
            </if>
            <if test="createdDt != null">
                #{createdDt},
            </if>
            <if test="updatedBy != null">
                #{updatedBy},
            </if>
            <if test="updatedDt != null">
                #{updatedDt},
            </if>
            <if test="version != null">
                #{version},
            </if>
        </trim>
    </insert>

    <select id="selectByParams" resultMap="BaseResultMap"
            parameterType="com.alfa.web.util.pojo.Criteria">
        select

        <if test="distinct">
            distinct
        </if>

        <include refid="Base_Column_List" />

        from SysUsers A

        left join SysRelevance B on(B.FirstId = A.Id and B.MappKey = 'UserRole')
        left join SysRole C on(C.Id = B.SecondId)

        left join SysRelevance D on(D.FirstId = A.Id and D.MappKey = 'UserAccount')
        left join SysAccount E on(E.Id = D.SecondId)

        <if test="condition.roleSid != null">
            INNER JOIN SYS_M_USER_ROLE F ON(A.USER_SID = F.USER_SID and F.ROLE_SID = #{condition.roleSid})
        </if>

        <if test="condition.roleSidIn != null">
            INNER JOIN SYS_M_USER_ROLE F ON(
            A.USER_SID = F.USER_SID
            and F.ROLE_SID in

            <foreach item="item" index="index" collection="condition.roleSidIn" open="(" separator="," close=")">
                #{item}
            </foreach>

            )
        </if>

        <if test="condition.accountLeavel != null">
            INNER JOIN SYS_M_ACCOUNT AC ON(A.ACCOUNT_SID = AC.ACCOUNT_SID and AC.ACCOUNT_LEVEL_SID = #{condition.accountLeavel})
        </if>

        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>

        GROUP BY A.Id

        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>

        <include refid="common.Mysql_Pagination_Limit" />

    </select>
    <select id="countByParams" parameterType="com.alfa.web.util.pojo.Criteria"
            resultType="java.lang.Integer">
        select count(*) from SysUsers A

        <if test="condition.roleSid != null">
            INNER JOIN SysRelevance F ON(A.Id= F.FirstId and F.SecondId = #{condition.roleSid})
        </if>

        <if test="condition.accountNameLike != null">
            LEFT JOIN SysAccount B ON(B.Id=A.ACCOUNT_SID)
        </if>

        <if test="condition.accountType != null">
            INNER JOIN SysAccount G ON(A.ACCOUNT_SID = G.ACCOUNT_SID and G.ACCOUNT_TYPE = #{condition.accountType})
        </if>

        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from
        SysUsers A
        left join SysRelevance B on(B.FirstId = A.Id and B.MappKey = 'UserRole')
        left join SysRole C on(C.Id = B.SecondId)

        left join SysRelevance D on(D.FirstId = A.Id and D.MappKey = 'UserAccount')
        left join SysAccount E on(E.Id = D.SecondId)
        where A.Id =
        #{Id}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from
        SysUsers
        where Id = #{Id}
    </delete>
    <delete id="deleteByParams" parameterType="com.alfa.web.util.pojo.Criteria">
        delete from SysUsers A
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

</mapper>